Query? (type 'done.' to end)
Requesting... model/temp = text-davinci-003/0.1 .. real 54.93681700s
Response(s):
Choice# 0:

Ada:
with Ada.Text_IO;
use Ada.Text_IO;

procedure Hello_World is
begin
   Put_Line("Hello, World!");
   for I in 1..100 loop
      Put(Integer'Image(I) & " ");
   end loop;
   New_Line;
end Hello_World;

Assembly:
.data
msg:    .ascii "Hello, World!\n"

.text
.global _start

_start:
    mov $4, %eax
    mov $1, %ebx
    mov $msg, %ecx
    mov $14, %edx
    int $0x80

    mov $1, %eax
    mov $1, %ebx
    mov $0, %ecx
    int $0x80

loop:
    mov $4, %eax
    mov $1, %ebx
    mov $1, %ecx
    mov $1, %edx
    int $0x80

    inc %ecx
    cmp $100, %ecx
    jne loop

BASIC:
PRINT "Hello, World!"
FOR I = 1 TO 100
    PRINT I;
NEXT I

C:
#include <stdio.h>

int main()
{
    printf("Hello, World!\n");
    for (int i = 1; i <= 100; i++) {
        printf("%d ", i);
    }
    printf("\n");
    return 0;
}

Erlang:
-module(hello_world).
-export([main/0]).

main() ->
    io:fwrite("Hello, World!\n"),
  lists:foreach(fun(I) -> io:fwrite(integer_to_list(I) ++ " ")
 end, lists:seq(1, 100)),
    io:fwrite("\n").

go:
package main

import "fmt"

func main() {
    fmt.Println("Hello, World!")
    for i := 1; i <= 100; i++ {
        fmt.Printf("%d ", i)
    }
    fmt.Println()
}

java:
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
        for (int i = 1; i <= 100; i++) {
            System.out.print(i + " ");
        }
        System.out.println();
    }
}

javascript:
console.log("Hello, World!");
for (let i = 1; i <= 100; i++) {
    console.log(i + " ");
}

python:
print("Hello, World!")
for i in range(1, 101):
    print(i, end=" ")
print()

ruby:
puts "Hello, World!"
1.upto(100) { |i| print "#{i} " }
puts

perl:
print "Hello, World!\n";
for (my $i = 1; $i <= 100; $i++) {
    print "$i ";
}
print "\n";

postscript:
/HelloWorld {
    (Hello, World!) print
    1 1 100 {
        dup dup dup
        ( ) print
        1 add
    } for
    (\n) print
} def
HelloWorld


     finish = stop
Stats: 1676486224 tot/prompt/compl tokens = 869/49/820

