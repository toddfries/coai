Query? (type 'done.' to end)
Requesting... model/temp = text-davinci-003/0.9 .. real 47.77796800s
Response(s):
Choice# 0:

// Ada
with Ada.Text_IO; use Ada.Text_IO;

procedure Hello_World is
begin
   Put_Line("Hello, World!");
   for i in 1..100 loop 
      Put(i'Image & " ");
   end loop;
end Hello_World;

// Assembly
.data
msg: db "Hello, World!"
.code
main:
    mov eax, 4
    mov ebx, 1
    mov ecx, msg
    mov edx, 13
    int 0x80
         
    mov eax, 1
    mov ebx, 1
    mov ecx, 1
    jmp start
print:
    mov eax, 4
    mov ebx, 1
    mov ecx, counter
    mov edx, 3
    int 0x80

start:    
    cmp ecx, 100 
    ja end

    mov dword [counter], ecx
    inc ecx
    jmp print

end:
    mov eax, 1
    mov ebx, 0
    int 0x80

counter:
    dw 0

// BASIC
10 PRINT "Hello, World!"
20 FOR i=1 TO 100
30 PRINT i;
40 NEXT i

// C
#include <stdio.h>

int main(void) 
{
  printf("Hello, World!\n");
  for (int i=1; i<=100; i++) {
    printf("%d ", i);
  } 
  printf("\n");
  return 0;
}

// Erlang
-module(hello_world).
-export([hello_world/0]).

hello_world() ->
  io:fwrite("Hello, World!~n"),
  Count(1).

Count(100) ->
  ok;
Count(Num) ->
  io:fwrite(integer_to_list(Num)),
  Count(Num + 1).

// Go
package main

import "fmt"

func main() {
	fmt.Println("Hello, World!")
	for i:=1; i <= 100; i++ {
		fmt.Printf("%d ", i)
	}
	fmt.Println()
}

// Java
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
        for(int i = 1; i <= 100; i++){
            System.out.print(i + " ");
        }
    }
}

// Javascript
console.log("Hello, World!");
for (let i = 1; i <= 100; i++) {
  console.log(i + " ");
}

// Python
print("Hello, World!")
for i in range(1,101):
    print(i, end=" ")

// Ruby
puts "Hello, World!"
for i in 1..100
    print "#{i} "
end

// Perl
print "Hello, World!\n";
for (my $i = 1; $i <= 100; $i++) {
  print "$i ";
}

// Postscript
/printMsg { 
  (Hello, World!) 
  show
} def
/count {
  1
  100 {
    dup
    ( ) print
    1 add
  } for 
} def

printMsg
count


     finish = stop
Stats: 1676500551 tot/prompt/compl tokens = 865/49/816

