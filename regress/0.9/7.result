Query? (type 'done.' to end)
Requesting... model/temp = text-davinci-003/0.9 .. real 34.81801200s
Response(s):
Choice# 0:

Ada:

with Ada.Text_IO;
use Ada.Text_IO;

procedure Hello_World is
begin
   Put_Line("Hello, World");
   for i in 1..100 loop
      Put(Integer'Image(i) & " ");
   end loop;
   
end Hello_World;

Assembly:

section .data
    msg db "Hello, World", 0Ah

section .text
   global _start
 
_start:

   ; Print 'Hello, World'
   mov eax, 4
   mov ebx, 1
   mov ecx, msg
   mov edx, 14
   int 80h

   ; Count to 100
   mov eax, 1
   mov esi, 1
.loop:
    cmp esi, 100
    jg .done
    ; Print the current number
    mov ebx, 1
    mov ecx, esi
    mov edx, 1
    int 80h
    inc esi
    jmp .loop
.done:
    mov eax, 1
    xor ebx, ebx
    int 80h

BASIC:

10 PRINT "Hello, World"
20 FOR i = 1 TO 100
30 PRINT i;
40 NEXT i

C: 

#include <stdio.h>
  
int main() 
{
    printf("Hello, World\n");
    for (int i = 1; i <= 100; i++)
    {
        printf("%d ", i);
    }
    return 0;
}

Erlang: 

-module(hello_world).
-export([main/0]).

main() ->
    io:fwrite("Hello, World\n"),
    count(1).

count(N) when N > 100 -> ok;
count(N) ->
    io:fwrite("~w ",[N]),
    count(N + 1).

Go: 

package main 

import "fmt"

func main() {
    fmt.Println("Hello, World")
    for i := 1; i<= 100; i++ { 
        fmt.Printf("%d ", i)
    }

}

Java:

public class HelloWorld{
    public static void main(String[] args){
        System.out.println("Hello, World");
        for (int i = 1; i <= 100; i++){
            System.out.print(i + " ");
        }
    }

}

Javascript:

console.log("Hello, World");
for (let i = 1; i <= 100; i++) { 
    console.log(i);
}
 
Python:

print("Hello, World")
for i in range(1, 101):
    print(i, end=" ")

Ruby:

puts "Hello, World"
for i in 1..100
  puts i
end

Perl:

print "Hello, World\n";
for(my $i = 1; $i <= 100; $i++) { 
    print $i . " ";
}

Postscript:

/Display {dup type /stringtype eq
        {pop show}
        {dup length 1 eq {pop ==} {exch ==} ifelse} ifelse
      } def

Display (Hello, World )

/i 0 def
{
    dup i 0 lt {
        i 1 add
        ( ) Display
        i 1 add 
        dup i 100 lt {
            dup ( ) Display
            dup i 1 add
        } if
    } if
} loop


     finish = stop
Stats: 1678788268 tot/prompt/compl tokens = 910/49/861

