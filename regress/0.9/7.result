Query? (type 'done.' to end)
Requesting... model/temp = text-davinci-003/0.9 .. real 40.23467200s
Response(s):
Choice# 0:

Ada:
with Ada.Text_IO; 
use Ada.Text_IO; 

procedure Hello_World is 
begin 
  Put ("Hello, World!"); 
  New_Line; 
end Hello_World; 

procedure Count_To_100 is 
begin
  for I in 1..100 loop
    Put(Integer'Image(I));
    New_Line;
  end loop;
end Count_To_100;

Assembly:
.data
msg:    .asciiz "Hello, World!" 

.text
.globl	 main
main:
  li $v0,4 # system call for print string
  la $a0,msg # load address of msg into $a0
    syscall                      # print the string

	li		$t0, 0				#initialize counter to 0

Loop:
	li		$v0, 1				#system call to print an integer
	add		$t0, $t0, 1		#increment counter
	move	$a0, $t0			#move counter value to $a0
	syscall						#print value

	li		$t1, 100			#value to compare counter to
	bne		$t0, $t1, Loop		#if not equal, go back to loop
	j		end_loop			#otherwise end

end_loop:

BASIC:
10 PRINT "Hello, World!"
20 FOR I = 1 TO 100
30 PRINT I
40 NEXT I

C:
#include <stdio.h> 
 
int main () { 
  printf("Hello, World!\n"); 
 
  int i;
  for (i=1; i<=100; i++)
    printf("%d\n", i);

return 0; 
} 

Erlang:
-module(helloworld).
-export([hello/0, count/0]).

hello() ->
    io:fwrite("Hello, World!~n").
 
%loop to generate numbers from 1 to 100
count() ->
    count(1).

count(I) when I > 100 ->
    ok;

count(I) ->
    io:fwrite("~p~n", [I]),
    count(I+1).

go:
package main
 
import "fmt"
 
func main() {
    fmt.Println("Hello, World!")
 
    for i := 1; i <= 100; i++ {
        fmt.Println(i)
    }
}

Java:
public class HelloWorld {
  public static void main(String[] args) {
    System.out.println("Hello, World!"); 
 
    for (int i = 1; i <= 100; i++) {
      System.out.println(i); 
    }
  }
}

JavaScript:
console.log("Hello, World!"); 
 
for (i = 1; i <= 100; i++) {
  console.log(i);
}

Python:
print("Hello, World!")
 
for i in range(1,101):
    print(i)

Ruby:
puts "Hello, World!"

1.upto(100) do |i| 
  puts i
end

Perl:
print "Hello, World!\n"; 
 
for(my $i = 1; $i <= 100; $i++) {
  print "$i\n";
}

Postscript:
/Times-Roman findfont 14 scalefont setfont 
150 500 moveto
(Hello, World!) show

/Counter 0 def

{
Counter 1 add
dup 0 150 moveto
show
Counter 100 lt
{ Counter exch } if
} loop


     finish = stop
Stats: 1677512016 tot/prompt/compl tokens = 978/49/929

