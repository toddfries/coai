Query? (type 'done.' to end)
Requesting... model/temp = text-davinci-003/0.9 .. real 57.68720300s
Response(s):
Choice# 0:

ADA: 
with Ada.Text_IO; 
use Ada.Text_IO; 
procedure Hello_World is
begin
     Put_Line("Hello, World");
     for i in 1..100 loop
        Put(Integer'Image(i));
        Put_Line("");
     end loop;
end Hello_World;

ASSEMBLY:
section .text
	global _start

_start:
	mov     edx,13
	mov     ecx,helloWorld
	mov     ebx,1
	mov     eax,4
	int     0x80

	mov     eax,1
	mov     ebx,0
	int     0x80

helloWorld:
	db      'Hello, World', 0xd, 0xa

loop:
	mov     edx,1
	mov     ecx,num
	mov     ebx,1
	mov     eax,4
	int     0x80

	inc     byte [num]
	cmp     byte [num], 100
	jne     loop

; exit
	mov     eax,1
	mov     ebx,0
	int     0x80

section .data
	num db 0

BASIC:
PRINT "Hello, World"
FOR i = 0 TO 100
    PRINT i
NEXT i
 
C:
#include <stdio.h>

int main()
{
    printf("Hello, World\n");
    for (int i=1; i<=100; i++)
    {
        printf("%d\n",i);
    }
    return 0;
}

ERLANG:
-module(hello_world).
-export([main/0]).

main() -> 
    io:fwrite("Hello, World\n"),
  lists:foreach(fun(I) -> io:fwrite(I++"\n") end,
 lists:seq(1,100)).

GO:
package main

import (
	"fmt"
)

func main() {
        fmt.Println("Hello, World")
        for i := 1; i <= 100; i++ {
                fmt.Println(i)
        }
}

JAVA:
public class HelloWorld {
        public static void main(String[] args) {
               System.out.println("Hello, World);
               for(int i = 1; i <= 100; i++){
                       System.out.println(i);
               }
        }
}

JAVASCRIPT:
console.log("Hello, World");
for (let i = 1; i < 100; i++) {
        console.log(i);
}

PYTHON:
print("Hello, World")
for i in range(1,101):
    print(i)

RUBY:
puts "Hello, World"
1.upto(100) do |i|
  puts i
end

PERL:
print "Hello, World\n";
for (my $i = 1; $i <= 100; $i++) {
    print "$i\n";
}

POSTSCRIPT:
%!
/helloWorldStr 80 string def
helloWorldStr 0 13 helloWorldStr putinterval
(Hello, World
) print

0
1 {
dup
helloWorldStr 0 ( ) putinterval cvs print
1 add
} for


     finish = stop
Stats: 1676486156 tot/prompt/compl tokens = 867/49/818

