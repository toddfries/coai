Query? (type 'done.' to end)
Requesting... model/temp = text-davinci-003/0.5 .. real 42.50686600s
Response(s):
Choice# 0:

# Ada
with Ada.Text_IO;
use Ada.Text_IO;

procedure Hello_World is
begin
   Put_Line("Hello, World");
   for I in 1..100 loop
      Put(Integer'Image(I) & " ");
   end loop;
   New_Line;
end Hello_World;

# Assembly
.data
msg:
    .asciz "Hello, World\n"

.text
.global _start

_start:
    mov $4, %eax
    mov $1, %ebx
    mov $msg, %ecx
    mov $13, %edx
    int $0x80

    mov $1, %eax
    mov $0, %ebx
    loop:
        mov $1, %eax
        mov $1, %ebx
        mov $1, %ecx
        mov $1, %edx
        int $0x80
        inc %ebx
        cmp $101, %ebx
        jne loop

# BASIC
10 PRINT "Hello, World"
20 FOR I = 1 TO 100
30 PRINT I;
40 NEXT I

# C
#include <stdio.h>

int main() {
    printf("Hello, World\n");
    for (int i = 1; i <= 100; i++) {
        printf("%d ", i);
    }
    printf("\n");
    return 0;
}

# Erlang
-module(hello_world).
-export([hello_world/0]).

hello_world() ->
    io:fwrite("Hello, World\n"),
  lists:foreach(fun(X) -> io:fwrite("~p ",[X]) end,
 lists:seq(1,100)),
    io:fwrite("\n").

# go
package main

import (
    "fmt"
)

func main() {
    fmt.Println("Hello, World")
    for i := 1; i <= 100; i++ {
        fmt.Printf("%d ", i)
    }
    fmt.Println()
}

# java
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World");
        for (int i = 1; i <= 100; i++) {
            System.out.print(i + " ");
        }
        System.out.println();
    }
}

# javascript
console.log("Hello, World");
for (let i = 1; i <= 100; i++) {
    console.log(i + " ");
}

# python
print("Hello, World")
for i in range(1, 101):
    print(i, end=" ")

# ruby
puts "Hello, World"
1.upto(100) { |i| print "#{i} " }

# rust
fn main() {
    println!("Hello, World");
    for i in 1..100 {
        print!("{} ", i);
    }
    println!();
}

# perl
print "Hello, World\n";
for (my $i=1; $i<=100; $i++) {
    print "$i ";
}
print "\n";

# postscript
%!
/Times-Roman findfont
20 scalefont
setfont

/str 50 string def

/drawstring {
    moveto
    str cvs
    show
} def

50 50 moveto
(Hello, World) drawstring

90 50 moveto
 (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100)
 drawstring
showpage


     finish = stop
Stats: 1678788765 tot/prompt/compl tokens = 1013/51/962

