Query? (type 'done.' to end)
Requesting... model/temp = text-davinci-003/0.5 .. real 34.86827500s
Response(s):
Choice# 0:

Ada:
with Ada.Text_IO;
 use Ada.Text_IO;
 
 procedure Hello_World is
 begin
  Put_Line("Hello, World!");
 
  for I in 1..100 loop
   Put(Integer'Image(I));
   Put(" ");
  end loop;
  New_Line;
 end Hello_World;

Assembly:
section .data
msg: db "Hello, World!", 0xa

section .text
global _start

_start:
	mov edx, len
	mov ecx, msg
	mov ebx, 1
	mov eax, 4
	int 0x80

loop:
	mov eax, [counter]
	add eax, 1
	mov [counter], eax

	mov edx, 1
	mov ecx, counter
	mov ebx, 1
	mov eax, 4
	int 0x80

	cmp eax, 100
	jne loop

exit:
	mov eax, 1
	mov ebx, 0
	int 0x80

section .bss
counter: resd 1

BASIC:
10 PRINT "Hello, World!"
20 FOR I = 1 TO 100
30 PRINT I;
40 NEXT I
50 END

C:
#include <stdio.h>

int main()
{
    printf("Hello, World!\n");
    for (int i = 1; i <= 100; i++) {
        printf("%d ", i);
    }
    printf("\n");
    return 0;
}

Erlang:
-module(hello_world).
-export([hello/0, count/0]).

hello() ->
    io:fwrite("Hello, World!\n").

count() ->
  lists:foreach(fun(I) -> io:fwrite("~w ",[I]) end,
 lists:seq(1,100)),
    io:fwrite("\n").

go:
package main

import "fmt"

func main() {
    fmt.Println("Hello, World!")
    for i := 1; i <= 100; i++ {
        fmt.Printf("%d ", i)
    }
    fmt.Println()
}

Java:
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello, World!");
        for (int i = 1; i <= 100; i++) {
            System.out.print(i + " ");
        }
        System.out.println();
    }
}

Javascript:
console.log("Hello, World!");
for (let i = 1; i <= 100; i++) {
    console.log(i + " ");
}

Python:
print("Hello, World!")
for i in range(1, 101):
    print(i, end=" ")
print()

Ruby:
puts "Hello, World!"
(1..100).each {|i| print "#{i} "}
puts

Perl:
print "Hello, World!\n";
for (my $i = 1; $i <= 100; $i++) {
    print "$i ";
}
print "\n";

PostScript:
/HelloWorld {
    (Hello, World!) print
    1 1 100 {
        dup print
        ( ) print
    } for
    ( ) print
    newline
} def
HelloWorld


     finish = stop
Stats: 1678788270 tot/prompt/compl tokens = 884/49/835

